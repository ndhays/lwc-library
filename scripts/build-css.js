import fs from 'fs';
import { execSync } from 'child_process';

const WATCH_DIR = './src/modules/';
const OUTPUT_FILE = 'tailwind.css';

const tailwindComponent = (componentPath) => {
  const contentPath = componentPath + '/*.{html,js,ts}';
  const outputPath = componentPath + '/' + OUTPUT_FILE;
  execSync(`npx tailwindcss -c ./tailwind.config.js -i ./tailwind.css --content ${contentPath} -o ${outputPath}`);
  // remove tailwind base styles from CSS file
  const css = fs.readFileSync(outputPath, 'utf8');
  const newCss = css.split('\n');
  let lineNumber = newCss.length;
  while (lineNumber--) {
    if (newCss[lineNumber].match('backdrop-sepia')) {
      break;
    }
    lineNumber--;
  }
  newCss[0] = '/* Auto-generated by tailwind build script (yarn build:css) */';
  newCss.splice(0, lineNumber + 2);
  fs.writeFileSync(outputPath, newCss.join('\n'), 'utf8');
  // if file is now empty, just remove it
  if (newCss.length === 1) {
    fs.unlinkSync(outputPath);
  }
};

const tailwindNamespace = (dir) => {
  // look up all LWC components in directory
  const components = fs.readdirSync(dir);
  components.forEach(component => {
    // run on each component in the namespace
    const componentPath = dir + '/' + component;
    tailwindComponent(componentPath);
  });
}

tailwindNamespace(WATCH_DIR + 'c');